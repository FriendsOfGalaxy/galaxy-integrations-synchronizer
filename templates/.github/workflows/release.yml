name: Release

on:
  repository_dispatch:
  pull_request:
    types: [closed]

jobs:
  build:
    if: (github.event_name == 'repository_dispatch' && github.event.action == 'release') ||
        (github.head_ref == 'autoupdate' && github.base_ref == 'master' && github.event.pull_request.merged == true)
    strategy:
      matrix:
        os: [macOS-latest, windows-2019]
        include:  # match Python bitness shipped with Galaxy
          - os: macOS-latest
            arch: x64
          - os: windows-2019
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        architecture: ${{ matrix.arch }}

    - name: Setup scripts
      run: |
        curl https://raw.githubusercontent.com/FriendsOfGalaxy/galaxy-integrations-updater/master/scripts.py --output ../scripts.py
        python -m pip install wheel
        python -m pip install -U pip
        python -m pip install PyGithub==1.54
        python -m pip install pip-tools
        python -m pip install pytest

    - name: Build
      env:
        MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
      run: python ../scripts.py build --dir ~/build/${{ matrix.os }}

    - uses: actions/upload-artifact@v2
      with:
        name: build_${{ matrix.os }}
        path: ~/build/${{ matrix.os }}

  deploy:
    if: (github.event_name == 'repository_dispatch' && github.event.action == 'release') ||
        (github.head_ref == 'autoupdate' && github.base_ref == 'master' && github.event.pull_request.merged == true)
    runs-on: ubuntu-18.04
    needs: build
    steps:

    - uses: actions/checkout@v1
      with:
        ref: master

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Setup scripts
      run: |
        curl https://raw.githubusercontent.com/FriendsOfGalaxy/galaxy-integrations-updater/master/scripts.py --output ../scripts.py
        python -m pip install PyGithub==1.54

    - name: download Windows build
      uses: actions/download-artifact@v2
      with:
        name: build_windows-2019
        path: build/windows

    - name: download macOS build
      uses: actions/download-artifact@v2
      with:
        name: build_macOS-latest
        path: build/macos

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPOSITORY: ${{ github.repository }}
        MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
      run: python ../scripts.py release --dir build/

    - name: Update Release File
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPOSITORY: ${{ github.repository }}
        MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
      run: python ../scripts.py update_release_file
